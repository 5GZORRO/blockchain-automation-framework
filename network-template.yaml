---
# This is a sample configuration file for SupplyChain App on Single K8s Cluster.
# For multiple K8s clusters, there should be multiple configuration files.
network:
  # Network level configuration specifies the attributes required for each organization
  # to join an existing network.
  type: corda
  version: ${CORDA_VERSION}

  frontend: disabled   #Flag for frontend to enabled for nodes/peers

  #Environment section for Kubernetes setup
  env:
    type: "local"              # tag for the environment. Important to run multiple flux on single cluster
    proxy: ambassador               # value has to be 'ambassador' as 'haproxy' has not been implemented for Corda
    ambassadorPorts: 15010,15020    # Any additional Ambassador ports can be given here, must be comma-separated without spaces, this is valid only if proxy='ambassador'
    retry_count: 5                 # Retry count for the checks
    external_dns: disabled           # Should be enabled if using external-dns for automatic route configuration
  
  # Docker registry details where images are stored. This will be used to create k8s secrets
  # Please ensure all required images are built and stored in this registry. 
  # Do not check-in docker_password.
  docker:
    url: "${DOCKER_URL}"
    username: "${DOCKER_USERNAME}"
    password: "${DOCKER_PASSWORD}"
  
  # Remote connection information for doorman and networkmap (will be blank or removed for hosting organization)
  network_services:
    - service:
      type: doorman
      uri: "${DOORMAN_URI}"
      certificate: /home/blockchain-automation-framework/platforms/r3-corda/configuration/build/corda/doorman/tls/ambassador.crt
    - service:
      type: networkmap
      uri: "${NETWORK_MAP_URI}"
      certificate: /home/blockchain-automation-framework/platforms/r3-corda/configuration/build/corda/networkmap/tls/ambassador.crt
  
  # Allows specification of one or many organizations that will be connecting to a network.
  # If an organization is also hosting the root of the network (e.g. doorman, membership service, etc),
  # then these services should be listed in this section as well.
  organizations:
    # Specification for the 1st organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: operator-a
      country: UK
      state: London
      location: London
      # subject: "CN=OperatorA,OU=DLT,O=DLT,L=London,C=GB"
      subject: "CN=DLT Root CA,OU=DLT,O=DLT,L=London,C=GB"
      type: doorman-nms-notary
      external_url_suffix: develop.local.com
  
      cloud_provider: longhorn   # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        context: "5gzorro-5gzorro-k8s-ctrl1"
        config_file: "/home/blockchain-automation-framework/build/config"

      # Cordapps Repository details (optional if cordapps jar are store in a repository)
      # cordapps:
      #   jars: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-supply-chain/0.1/cordapp-supply-chain-0.1.jar
      #       url: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-contracts-states/0.1/cordapp-contracts-states-0.1.jar
      #       url: 
      #   username: "repository_username"
      #   password: "repository_password"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "${VAULT_URL}" # **NOTE** trailing slashes on this url will break the credential fetching from vault
        root_token: "${VAULT_ROOT_TOKEN}"
        secret_path: "secret"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "git@github.com:5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files like "https://github.com/hyperledger-labs/blockchain-automation-framework.git"
        # git_protocol: "https" # Option for git over https or ssh
        # git_url: "https://github.com/5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files 
        branch: "operator-a"           # Git branch where release is being made
        release_dir: "platforms/r3-corda/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/r3-corda/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/5GZORRO/blockchain-automation-framework.git"   # Gitops git repository URL for git push 
        username: "${GIT_USERNAME}"          # Git Service user who has rights to check-in in all branches
        password: "${GIT_PASSWORD}"      # Git Server user password/access token
        email: "${GIT_EMAIL}"                # Email to use in git config
        private_key: "/home/blockchain-automation-framework/build/gitops"          # Optional (required when protocol is ssh) : Path to private key file which has write-access to the git repo

      # Services maps to the pods that will be deployed on the k8s cluster
      # This sample has doorman, nms and notary on one cluster but different namespaces
      services:
        doorman:
          name: doorman
          subject: "CN=Corda Doorman CA,OU=DLT,O=DLT,L=Berlin,C=DE"
          db_subject: "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB"
          type: doorman
          ports:
            nodePort: 30030
            servicePort: 8080
            targetPort: 8080
          tls: "off"                      # off/on based on TLS mode off/on for doorman
        nms:
          name: networkmap
          subject: "CN=Network Map,OU=FRA,O=FRA,L=Berlin,C=DE"
          db_subject: "/C=US/ST=California/L=San Francisco/O=My Company Ltd/OU=DBA/CN=mongoDB"
          type: networkmap
          ports:
            nodePort: 30040
            servicePort: 8080
            targetPort: 8080
          tls: "off"                       # off/on based on TLS mode off/on for nms
        # Currently only supporting a single notary cluster, but may want to expand in the future
        notary:
          name: notary
          subject: "O=Notary,OU=Notary,L=London,C=GB"
          notaryServiceLegalName: "O=HA Notary,OU=Notary,L=London,C=GB"
          type: notary            
          p2p:
            port: 10002
            targetPort: 10002
            ambassador: 15010       #Port for ambassador service (must be from env.ambassadorPorts above)
          rpc:
            port: 10003
            targetPort: 10003
          rpcadmin:
            port: 10005
            targetPort: 10005
          dbtcp:
            port: 9101
            targetPort: 1521
          dbweb:             
            port: 8080
            targetPort: 81

    # Specification for the 2nd organization. Each organization maps to a VPC and a separate k8s cluster
    - organization:
      name: operatora
      country: GB
      state: London
      location: London
      subject: "CN=OperatorA,OU=DLT,O=DLT,L=London,C=GB"
      type: node
      external_url_suffix: develop.local.com
      
      cloud_provider: longhorn # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        context: "5gzorro-5gzorro-k8s-ctrl1"
        config_file: "/home/blockchain-automation-framework/build/config"

      # Cordapps Repository details (optional if cordapps jar are store in a repository)
      # cordapps:
      #   jars: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-supply-chain/0.1/cordapp-supply-chain-0.1.jar
      #       url: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-contracts-states/0.1/cordapp-contracts-states-0.1.jar
      #       url: 
      #   username: "repository_username"
      #   password: "repository_password"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "${VAULT_URL}" # **NOTE** trailing slashes on this url will break the credential fetching from vault
        root_token: "${VAULT_ROOT_TOKEN}"
        secret_path: "secret"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "git@github.com:5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files 
        branch: "operatora"           # Git branch where release is being made
        release_dir: "platforms/r3-corda/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/r3-corda/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/5GZORRO/blockchain-automation-framework.git"   # Gitops git repository URL for git push 
        username: "${GIT_USERNAME}"          # Git Service user who has rights to check-in in all branches
        password: "${GIT_PASSWORD}"      # Git Server user password/access token
        email: "${GIT_EMAIL}"                # Email to use in git config
        private_key: "/home/blockchain-automation-framework/build/gitops"          # Optional (required when protocol is ssh) : Path to private key file which has write-access to the git repo
      
      # The participating nodes are named as peers 
      services:
        peers:
        - peer:
          name: operatora
          subject: "CN=OperatorA,OU=DLT,O=DLT,L=London,C=GB"  # This is the node identity. L=lat/long is mandatory for supplychain sample app
          type: node
          notaryServiceLegalName: "O=HA Notary,OU=Notary,L=London,C=GB"
          p2p:
            port: 10002
            targetPort: 10002
            ambassador: 15020       #Port for ambassador service (must be from env.ambassadorPorts above)
          rpc:
            port: 10003
            targetPort: 10003
          rpcadmin:
            port: 10005
            targetPort: 10005
          dbtcp:
            port: 9101
            targetPort: 1521
          dbweb:             
            port: 8080
            targetPort: 81

    - organization:
      name: operatorb
      country: CH
      state: Zurich
      location: Zurich
      subject: "O=OperatorB,OU=Zurich,L=Zurich,C=CH"
      type: node
      external_url_suffix: develop.local.com
      
      cloud_provider: longhorn # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        context: "5gzorro-5gzorro-k8s-ctrl1"
        config_file: "/home/blockchain-automation-framework/build/config"

      # Cordapps Repository details (optional if cordapps jar are store in a repository)
      # cordapps:
      #   jars: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-supply-chain/0.1/cordapp-supply-chain-0.1.jar
      #       url: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-contracts-states/0.1/cordapp-contracts-states-0.1.jar
      #       url: 
      #   username: "repository_username"
      #   password: "repository_password"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "${VAULT_URL}" # **NOTE** trailing slashes on this url will break the credential fetching from vault
        root_token: "${VAULT_ROOT_TOKEN}"
        secret_path: "secret"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "git@github.com:5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files 
        branch: "operator-b"           # Git branch where release is being made
        release_dir: "platforms/r3-corda/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/r3-corda/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/5GZORRO/blockchain-automation-framework.git"   # Gitops git repository URL for git push 
        username: "${GIT_USERNAME}"          # Git Service user who has rights to check-in in all branches
        password: "${GIT_PASSWORD}"      # Git Server user password/access token
        email: "${GIT_EMAIL}"                # Email to use in git config
        private_key: "/home/blockchain-automation-framework/build/gitops"          # Optional (required when protocol is ssh) : Path to private key file which has write-access to the git repo
      
      # The participating nodes are named as peers 
      services:
        peers:
        - peer:
          name: operatorb
          subject: "O=OperatorB,OU=Zurich,L=Zurich,C=CH"  # This is the node identity. L=lat/long is mandatory for supplychain sample app
          type: node
          notaryServiceLegalName: "O=HA Notary,OU=Notary,L=London,C=GB"
          p2p:
            port: 10002
            targetPort: 10002
            ambassador: 15020       #Port for ambassador service (must be from env.ambassadorPorts above)
          rpc:
            port: 10003
            targetPort: 10003
          rpcadmin:
            port: 10005
            targetPort: 10005
          dbtcp:
            port: 9101
            targetPort: 1521
          dbweb:             
            port: 8080
            targetPort: 81

    - organization:
      name: operatorc
      country: ES
      state: Barcelona
      location: Barcelona
      subject: "O=OperatorC,OU=Barcelona,L=Barcelona,C=ES"
      type: node
      external_url_suffix: develop.local.com
      
      cloud_provider: longhorn # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        context: "5gzorro-5gzorro-k8s-ctrl1"
        config_file: "/home/blockchain-automation-framework/build/config"

      # Cordapps Repository details (optional if cordapps jar are store in a repository)
      # cordapps:
      #   jars: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-supply-chain/0.1/cordapp-supply-chain-0.1.jar
      #       url: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-contracts-states/0.1/cordapp-contracts-states-0.1.jar
      #       url: 
      #   username: "repository_username"
      #   password: "repository_password"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "${VAULT_URL}" # **NOTE** trailing slashes on this url will break the credential fetching from vault
        root_token: "${VAULT_ROOT_TOKEN}"
        secret_path: "secret"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "git@github.com:5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files 
        branch: "operator-c"           # Git branch where release is being made
        release_dir: "platforms/r3-corda/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/r3-corda/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/5GZORRO/blockchain-automation-framework.git"   # Gitops git repository URL for git push 
        username: "${GIT_USERNAME}"          # Git Service user who has rights to check-in in all branches
        password: "${GIT_PASSWORD}"      # Git Server user password/access token
        email: "${GIT_EMAIL}"                # Email to use in git config
        private_key: "/home/blockchain-automation-framework/build/gitops"          # Optional (required when protocol is ssh) : Path to private key file which has write-access to the git repo
      
      # The participating nodes are named as peers 
      services:
        peers:
        - peer:
          name: operatorc
          subject: "O=OperatorC,OU=Barcelona,L=Barcelona,C=ES"  # This is the node identity. L=lat/long is mandatory for supplychain sample app
          type: node
          notaryServiceLegalName: "O=HA Notary,OU=Notary,L=London,C=GB"
          p2p:
            port: 10002
            targetPort: 10002
            ambassador: 15020       #Port for ambassador service (must be from env.ambassadorPorts above)
          rpc:
            port: 10003
            targetPort: 10003
          rpcadmin:
            port: 10005
            targetPort: 10005
          dbtcp:
            port: 9101
            targetPort: 1521
          dbweb:             
            port: 8080
            targetPort: 81


    - organization:
      name: regulatora
      country: IL
      state: Haifa
      location: Haifa
      subject: "O=RegulatorA,OU=Haifa,L=Haifa,C=IL"
      type: node
      external_url_suffix: develop.local.com
      
      cloud_provider: longhorn # Options: aws, azure, gcp
  
      # Kubernetes cluster deployment variables. The config file path and name has to be provided in case
      # the cluster has already been created.
      k8s:
        context: "5gzorro-5gzorro-k8s-ctrl1"
        config_file: "/home/blockchain-automation-framework/build/config"

      # Cordapps Repository details (optional if cordapps jar are store in a repository)
      # cordapps:
      #   jars: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-supply-chain/0.1/cordapp-supply-chain-0.1.jar
      #       url: 
      #   - jar:
      #       # e.g https://alm.accenture.com/nexus/repository/AccentureBlockchainFulcrum_Release/com/supplychain/bcc/cordapp-contracts-states/0.1/cordapp-contracts-states-0.1.jar
      #       url: 
      #   username: "repository_username"
      #   password: "repository_password"

      # Hashicorp Vault server address and root-token. Vault should be unsealed.
      # Do not check-in root_token
      vault:
        url: "${VAULT_URL}" # **NOTE** trailing slashes on this url will break the credential fetching from vault
        root_token: "${VAULT_ROOT_TOKEN}"
        secret_path: "secret"
      # Git Repo details which will be used by GitOps/Flux.
      # Do not check-in git_access_token
      gitops:
        git_protocol: "ssh" # Option for git over https or ssh
        git_url: "git@github.com:5GZORRO/blockchain-automation-framework.git"         # Gitops https or ssh url for flux value files 
        branch: "regulatora-a"           # Git branch where release is being made
        release_dir: "platforms/r3-corda/releases/dev" # Relative Path in the Git repo for flux sync per environment. 
        chart_source: "platforms/r3-corda/charts"     # Relative Path where the Helm charts are stored in Git repo
        git_repo: "github.com/5GZORRO/blockchain-automation-framework.git"   # Gitops git repository URL for git push 
        username: "${GIT_USERNAME}"          # Git Service user who has rights to check-in in all branches
        password: "${GIT_PASSWORD}"      # Git Server user password/access token
        email: "${GIT_EMAIL}"                # Email to use in git config
        private_key: "/home/blockchain-automation-framework/build/gitops"          # Optional (required when protocol is ssh) : Path to private key file which has write-access to the git repo
      
      # The participating nodes are named as peers 
      services:
        peers:
        - peer:
          name: regulatora
          subject: "O=RegulatorA,OU=Haifa,L=Haifa,C=IL"  # This is the node identity. L=lat/long is mandatory for supplychain sample app
          type: node
          notaryServiceLegalName: "O=HA Notary,OU=Notary,L=London,C=GB"
          p2p:
            port: 10002
            targetPort: 10002
            ambassador: 15020       #Port for ambassador service (must be from env.ambassadorPorts above)
          rpc:
            port: 10003
            targetPort: 10003
          rpcadmin:
            port: 10005
            targetPort: 10005
          dbtcp:
            port: 9101
            targetPort: 1521
          dbweb:             
            port: 8080
            targetPort: 81
    